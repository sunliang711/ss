#!/bin/bash

exeDir=/usr/local/bin
configDir=/etc/ss-go

help(){
    echo "Usage: $0 COMMAND"
    echo "COMMANDS:"
    echo -e "\tstart          start shadowsocks server "
    echo -e "\tstop           stop shadowsocks server"
    echo -e "\trestart        restart shadowsocks server"
    echo
    echo -e "\tstatus         check shadowsocks server status"
    echo
    echo -e "\tconfig         edit config file"
}

needRoot(){
    if (($EUID!=0));then
        echo "Need root privilidge!"
        exit 1
    fi
}
start(){
    needRoot
    exeName=${1:-"ss-server"}
    cfgName=${2:-"config.json"}
    cd "$exeDir"
    prgname=$(eval "\ls ${exeName}*")
    #debug
    echo "prgname is: $prgname"
    if [ -z "$prgname" ];then
        echo "Cannot find shadowsocks server,quit!"
        return 1
    fi

    if ps aux | grep -v grep | grep -q  ${prgname};then
        echo "Warning: ${prgname} is already running"
        return 1
    fi
    ulimit -n 51200
    "$exeDir/${prgname}" -c "$configDir/$cfgName"> /dev/null  2>&1 &

}

stop(){
    needRoot
    pkill ss-server
    pkill max-server
}

status(){
    # pid=`ps -ef | grep ${prgname} | grep -v grep | awk '{print $2}'`
    pid=$(pgrep ss-server)
    if [ -n "$pid" ];then
        echo "ss-server is running with pid: $pid"
    fi
    pid=$(pgrep max-server)
    if [ -n "$pid" ];then
        echo "max-server is running with pid: $pid"
    fi
}

config(){
    needRoot
    editor="vi"
    if command -v vim >/dev/null 2>&1;then
        editor="vim"
    fi
    "$editor" "$configDir/config.json" "$configDir/max-config.json"
    echo "You need restart ss-server." 
}

uninstall(){
    cd "$exeDir"
    rm max-server*
    rm ss-server*
    rm ss-go

    rm -rf "$configDir"

    if grep -q "ss-go start" /etc/rc.local;then
        sed -i "/ss-go start/d" /etc/rc.local
    fi

    if grep -q "alias ss-go" ~/.bashrc;then
        sed -i "/alias ss-go/d" ~/.bashrc
    fi
}


case "$1" in
    start)
        start
        start max-server max-config.json
        status
        ;;
    stop)
        stop
        status
        ;;
    status)
        status
        ;;
    restart)
        stop
        start
        start max-server max-config.json
        status
        ;;
    config)
        config
        ;;
    uninstall)
        stop
        uninstall
        ;;
    *)
        help
        ;;
esac
