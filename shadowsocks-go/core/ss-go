#!/bin/bash

exeDir=/usr/local/bin
configDir=/etc/ss-go

help(){
    echo "Usage: $0 COMMAND"
    echo "COMMANDS:"
    echo -e "\tstart          start shadowsocks server "
    echo -e "\tstop           stop shadowsocks server"
    echo -e "\trestart        restart shadowsocks server"
    echo
    echo -e "\tstatus         check shadowsocks server status"
    echo
    echo -e "\tconfig         edit config file"
    echo
    echo -e "\tfwOn           switch on firewall"
    echo -e "\tfwOff          switch off firewall"
}

needRoot(){
    if (($EUID!=0));then
        echo "Need root privilidge!"
        exit 1
    fi
}
start(){
    needRoot
    exeName=${1:-"ss-server"}
    cfgName=${2:-"config.json"}
    cd "$exeDir"
    prgname=$(eval "\ls ${exeName}*")
    #debug
    echo "prgname is: $prgname"
    if [ -z "$prgname" ];then
        echo "Cannot find shadowsocks server,quit!"
        return 1
    fi

    if ps aux | grep -v grep | grep -q  "${prgname} -c $configDir/$cfgName";then
        echo "Warning: ${prgname} is already running"
        return 1
    fi
    ulimit -n 51200
    "$exeDir/${prgname}" -c "$configDir/$cfgName"> /dev/null  2>&1 &

}

stop(){
    needRoot
    pkill ss-server
    pkill max-server
}

status(){
    # pid=`ps -ef | grep ${prgname} | grep -v grep | awk '{print $2}'`
    pid=$(pgrep ss-server)
    if [ -n "$pid" ];then
        echo "ss-server is running with pid: $pid"
    fi
    pid=$(pgrep max-server)
    if [ -n "$pid" ];then
        echo "max-server is running with pid: $pid"
    fi
}

config(){
    needRoot
    editor="vi"
    if command -v vim >/dev/null 2>&1;then
        editor="vim"
    fi
    "$editor" "$configDir/config.json" "$configDir/max-config.json"
    echo "You need restart ss-server." 
    read -p "Update firewall? [Y/n]" -t 10 fw
    if [[ "$fw" != [nN] ]];then
        fwOn
    fi
}

uninstall(){
    cd "$exeDir"
    rm max-server*
    rm ss-server*
    rm ss-go

    rm -rf "$configDir"

    if grep -q "ss-go start" /etc/rc.local;then
        sed -i "/ss-go start/d" /etc/rc.local
    fi

    if grep -q "alias ss-go" ~/.bashrc;then
        sed -i "/alias ss-go/d" ~/.bashrc
    fi
}

fwOn(){
#make firewall rule
##header
cat>"$configDir"/firewall<<EOF
*filter
:INPUT DROP [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -p icmp -j ACCEPT

EOF

##custom rule
echo '#SSH port' >>"$configDir"/firewall
echo "-A INPUT -p tcp --dport 22 -j ACCEPT" >>"$configDir"/firewall

##shadowsocks port from 'config.json'
echo >>"$configDir"/firewall
echo '#Shadowsocks port' >>"$configDir"/firewall
grep -oP '(?<=")[0-9]+(?=":)' "$configDir"/config.json |awk '{print "-A INPUT -p tcp --dport "$0" -j ACCEPT"}' >>"$configDir"/firewall
grep -oP '(?<=")[0-9]+(?=":)' "$configDir"/max-config.json |awk '{print "-A INPUT -p tcp --dport "$0" -j ACCEPT"}' >>"$configDir"/firewall
echo >>"$configDir"/firewall

if [ -f "$configDir"/otherRule ];then
    cat "$configDir"/otherRule >> "$configDir"/firewall
fi

#footer
cat >>"$configDir"/firewall<<EOF2
COMMIT
EOF2
iptables-restore <"$configDir"/firewall

editor=vi
if command -v vim>/dev/null 2>&1;then
    editor=vim
fi
read -p "Edit firewall file (view or add custom rule)?[y/N]"  -t 10 fw
if [[ "$fw" != [yY] ]];then
    exit 0
else
    "$editor" "$configDir"/firewall
    sed -n "/#otherRule begin/,/#otherRule end/w $configDir/otherRule" "$configDir"/firewall
    iptables-restore <"$configDir"/firewall
fi

}

fwOff(){
    iptables -F
    iptables -X
    iptables -Z
    iptables -P INPUT ACCEPT
    iptables -P OUTPUT ACCEPT
    iptables -P FORWARD ACCEPT
}

case "$1" in
    start)
        start
	#start ss-server config-chacha20.json
        #start max-server max-config.json
        status
        fwOn
        ;;
    stop)
        stop
        status
        fwOff
        ;;
    status)
        status
        ;;
    restart)
        stop
        start
	#start ss-server config-chacha20.json
        #start max-server max-config.json
        status
        ;;
    config)
        config
        ;;
    uninstall)
        stop
        uninstall
        ;;
    fwOn)
        fwOn
        ;;
    fwOff)
        fwOff
        ;;
    *)
        help
        ;;
esac
