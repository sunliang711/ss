#!/bin/bash
if ! command -v apt-get >/dev/null 2>&1;then
    echo "Error: Not Debian!"
    exit 1
fi
if [[ $EUID != 0 ]];then
    echo "Error:need root priviledge!"
    exit 1
fi

installer=apt-get

#apt比apt-get更好用
if command -v apt > /dev/null 2>&1;then
    installer=apt
fi

basicApps="sudo vim vim-gtk tree curl screenfetch zsh openssh-server"
devApps="build-essential cmake clang  python-apt python-dev python-pip python3-dev python3-pip libboost-all-dev golang golang-golang-x-tools ncurses-dev"

$installer update -y
read -p "Install development tools (ie:clang python boost golang)? [y/N] " -t 3 installDev
read -p "Setup swap? [Y/n]" -t 3 setupSwap
read -p "Whom to be add to sudo group?" -t 3 sudoer

#TODO check $sudoer existence. if $sudoer does not exist?
if [[ -n "$sudoer" ]];then
    adduser $sudoer sudo
fi

for app in ${basicApps};do
    $installer install $app -y
done

if [[ "$installDev" == [yY] ]];then
    for app in ${devApps};do
        $installer install $app -y
    done
fi


if [[ "$setupSwap" != [nN] ]];then
    SWAP=/var/swap.img
    if [[ ! -e "$SWAP" ]];then
        dd if=/dev/zero of="$SWAP" bs=1024k count=1000
        chmod 0600 "$SWAP"
        mkswap "$SWAP"
        swapon "$SWAP"
        echo "$SWAP none swap sw 0 0">>/etc/fstab
    else
        echo "Already exist swap file."
    fi
fi

setIptables(){
    systemctl stop iptables.service >/dev/null 2>&1
    root=/opt/iptables
    rm -rf $root >/dev/null 2>&1
    mkdir -p $root
    cp ./apply-iptables.sh $root
    cat > "$root/iptables.rules" <<EOF
*filter
:INPUT DROP [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -p icmp -j ACCEPT

#SSH port
-A INPUT -p tcp --dport 22 -j ACCEPT
#http port
# -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT
#https port
# -A INPUT -p tcp -m tcp --dport 443 -j ACCEPT

##the following four rules are proxy basic for redirect
#http port
-A INPUT -p tcp -m tcp --sport 80 -j ACCEPT
#https port
-A INPUT -p tcp -m tcp --sport 443 -j ACCEPT
#DNS port
-A INPUT -p tcp -m tcp --sport 53 -j ACCEPT
-A INPUT -p udp -m udp --sport 53 -j ACCEPT

#Shadowsocks port
-A INPUT -p tcp --dport 5050 -j ACCEPT

EOF
    touch "$root"/other.rules
    cat > "$root"/end.rules<<EOF
COMMIT
EOF
    chmod 400 "$root"/iptables.rules
    chmod 400 "$root"/end.rules

    stopScript=$root/stop-iptables
    cat > "$stopScript" <<EOF
#!/bin/bash
/sbin/iptables -F
/sbin/iptables -P INPUT ACCEPT
/sbin/iptables -P OUTPUT ACCEPT
/sbin/iptables -P FORWARD ACCEPT
EOF
    chmod +x "$stopScript"
    cat > /lib/systemd/system/iptables.service<<EOF
[Unit]
Description=iptables
After=network.target

[Service]
Type=oneshot
User=root
# ExecStart=/sbin/iptables-restore /etc/iptables-rules
# ExecReload=/sbin/iptables-restore /etc/iptables-rules
ExecStart=$root/apply-iptables.sh
ExecStop=$stopScript
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF
    systemctl daemon-reload
    systemctl start iptables.service
    systemctl enable iptables.service
}

case $1 in
    iptables)
        setIptables
        ;;
esac
